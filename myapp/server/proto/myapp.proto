syntax = "proto3";

package myapp;
option go_package="/";

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

// 创建数据库
message DatabaseCreateRequest {
  string name = 1;
  string type = 2;
  string host = 3;
  int32 port = 4;
  string username = 5;
  string password = 6;
  string database = 7;
  string description = 8;
}

message DatabaseCreateResponse {
  bool success = 1;
  string message = 2;
  uint64 database_id = 3;
}
//测试数据库连接
message DatabaseTestRequest {
  uint64 database_id = 1;
}

message DatabaseTestResponse {
  bool success = 1;
  string message = 2;
}
//数据库列表展示
message DatabaseListRequest {

}

message DatabaseInfo {
  uint64 id = 1;
  string name = 2;
  string type = 3;
  string host = 4;
  int32 port = 5;
  string username = 6;
  string database = 7;
  string status = 8;
  string description = 9;
  string created_at = 10;
}

message DatabaseListResponse {
  bool success = 1;
  string message = 2;
  repeated DatabaseInfo databases = 3;
}
//数据库修改
message DatabaseUpdateRequest {
  uint64 id = 1;
  string name = 2;
  string type = 3;
  string host = 4;
  int32 port = 5;
  string username = 6;
  string password = 7;
  string database = 8;
  string description = 9;
}

message DatabaseUpdateResponse {
  bool success = 1;
  string message = 2;
}
//数据库删除
message DatabaseDeleteRequest {
  uint64 id = 1;
}

message DatabaseDeleteResponse {
  bool success = 1;
  string message = 2;
}
//数据库单条查询
message DatabaseGetRequest {
  uint64 id = 1;
}

message DatabaseGetResponse {
  bool success = 1;
  string message = 2;
  DatabaseInfo database = 3;
}
// 数据库同步相关
message DatabaseSyncRequest {
  string server_url = 1;        // 远程服务器URL
  string api_key = 2;           // API密钥
  string sync_type = 3;         // 同步类型: full/incremental
  bool overwrite = 4;           // 是否覆盖已存在的记录
}

message DatabaseSyncResponse {
  bool success = 1;
  string message = 2;
  int32 total_synced = 3;       // 同步总数
  int32 created = 4;            // 新增数量
  int32 updated = 5;            // 更新数量
  int32 skipped = 6;            // 跳过数量
  repeated string errors = 7;   // 错误信息列表
}

// 远程服务器数据库信息
message RemoteDatabaseInfo {
  uint64 id = 1;
  string name = 2;
  string type = 3;
  string host = 4;
  int32 port = 5;
  string username = 6;
  string database = 7;
  string status = 8;
  string description = 9;
  string created_at = 10;
  string updated_at = 11;
}
message RemoteDatabaseListRequest{

}
message RemoteDatabaseListResponse {
  bool success = 1;
  string message = 2;
  repeated RemoteDatabaseInfo databases = 3;
}
service Myapp {
  rpc Ping(Request) returns(Response);
  rpc DatabaseSync(DatabaseSyncRequest) returns(DatabaseSyncResponse);
  rpc RemoteDatabaseList(RemoteDatabaseListRequest) returns(RemoteDatabaseListResponse);
  rpc DatabaseCreate(DatabaseCreateRequest) returns(DatabaseCreateResponse);
  rpc DatabaseTest(DatabaseTestRequest) returns(DatabaseTestResponse);
  rpc DatabaseList(DatabaseListRequest) returns(DatabaseListResponse);
  rpc DatabaseUpdate(DatabaseUpdateRequest) returns(DatabaseUpdateResponse);
  rpc DatabaseDelete(DatabaseDeleteRequest) returns(DatabaseDeleteResponse);
  rpc DatabaseGet(DatabaseGetRequest) returns(DatabaseGetResponse);
}

