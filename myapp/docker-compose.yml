version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: myapp-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: myapp
      MYSQL_USER: myapp
      MYSQL_PASSWORD: myapp123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - myapp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # MyApp应用服务
  myapp:
    build: .
    container_name: myapp-service
    restart: unless-stopped
    ports:
      - "7777:7777"  # gRPC端口
      - "8889:8889"  # HTTP API端口
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=myapp
      - DB_PASSWORD=myapp123
      - DB_NAME=myapp
    networks:
      - myapp-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8889/api/database/list"]
      timeout: 10s
      retries: 5
      start_period: 30s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: myapp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL证书目录（可选）
    depends_on:
      - myapp
    networks:
      - myapp-network

volumes:
  mysql_data:
    driver: local

networks:
  myapp-network:
    driver: bridge