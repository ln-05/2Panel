// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: myapp.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_myapp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_myapp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 创建数据库
type DatabaseCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Database      string                 `protobuf:"bytes,7,opt,name=database,proto3" json:"database,omitempty"`
	Description   string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseCreateRequest) Reset() {
	*x = DatabaseCreateRequest{}
	mi := &file_myapp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseCreateRequest) ProtoMessage() {}

func (x *DatabaseCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseCreateRequest.ProtoReflect.Descriptor instead.
func (*DatabaseCreateRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseCreateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseCreateRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseCreateRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseCreateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DatabaseCreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DatabaseCreateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DatabaseCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DatabaseId    uint64                 `protobuf:"varint,3,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseCreateResponse) Reset() {
	*x = DatabaseCreateResponse{}
	mi := &file_myapp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseCreateResponse) ProtoMessage() {}

func (x *DatabaseCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseCreateResponse.ProtoReflect.Descriptor instead.
func (*DatabaseCreateResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseCreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DatabaseCreateResponse) GetDatabaseId() uint64 {
	if x != nil {
		return x.DatabaseId
	}
	return 0
}

// 测试数据库连接
type DatabaseTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DatabaseId    uint64                 `protobuf:"varint,1,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseTestRequest) Reset() {
	*x = DatabaseTestRequest{}
	mi := &file_myapp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTestRequest) ProtoMessage() {}

func (x *DatabaseTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTestRequest.ProtoReflect.Descriptor instead.
func (*DatabaseTestRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseTestRequest) GetDatabaseId() uint64 {
	if x != nil {
		return x.DatabaseId
	}
	return 0
}

type DatabaseTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseTestResponse) Reset() {
	*x = DatabaseTestResponse{}
	mi := &file_myapp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTestResponse) ProtoMessage() {}

func (x *DatabaseTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTestResponse.ProtoReflect.Descriptor instead.
func (*DatabaseTestResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{5}
}

func (x *DatabaseTestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 数据库列表展示
type DatabaseListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseListRequest) Reset() {
	*x = DatabaseListRequest{}
	mi := &file_myapp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseListRequest) ProtoMessage() {}

func (x *DatabaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseListRequest.ProtoReflect.Descriptor instead.
func (*DatabaseListRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{6}
}

type DatabaseInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Host          string                 `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Database      string                 `protobuf:"bytes,7,opt,name=database,proto3" json:"database,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Description   string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	mi := &file_myapp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfo.ProtoReflect.Descriptor instead.
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{7}
}

func (x *DatabaseInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DatabaseInfo) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DatabaseInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DatabaseInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DatabaseListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Databases     []*DatabaseInfo        `protobuf:"bytes,3,rep,name=databases,proto3" json:"databases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseListResponse) Reset() {
	*x = DatabaseListResponse{}
	mi := &file_myapp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseListResponse) ProtoMessage() {}

func (x *DatabaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseListResponse.ProtoReflect.Descriptor instead.
func (*DatabaseListResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{8}
}

func (x *DatabaseListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DatabaseListResponse) GetDatabases() []*DatabaseInfo {
	if x != nil {
		return x.Databases
	}
	return nil
}

// 数据库修改
type DatabaseUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Host          string                 `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Database      string                 `protobuf:"bytes,8,opt,name=database,proto3" json:"database,omitempty"`
	Description   string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseUpdateRequest) Reset() {
	*x = DatabaseUpdateRequest{}
	mi := &file_myapp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseUpdateRequest) ProtoMessage() {}

func (x *DatabaseUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseUpdateRequest.ProtoReflect.Descriptor instead.
func (*DatabaseUpdateRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{9}
}

func (x *DatabaseUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DatabaseUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseUpdateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DatabaseUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseUpdateResponse) Reset() {
	*x = DatabaseUpdateResponse{}
	mi := &file_myapp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseUpdateResponse) ProtoMessage() {}

func (x *DatabaseUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseUpdateResponse.ProtoReflect.Descriptor instead.
func (*DatabaseUpdateResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{10}
}

func (x *DatabaseUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 数据库删除
type DatabaseDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseDeleteRequest) Reset() {
	*x = DatabaseDeleteRequest{}
	mi := &file_myapp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseDeleteRequest) ProtoMessage() {}

func (x *DatabaseDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseDeleteRequest.ProtoReflect.Descriptor instead.
func (*DatabaseDeleteRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{11}
}

func (x *DatabaseDeleteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DatabaseDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseDeleteResponse) Reset() {
	*x = DatabaseDeleteResponse{}
	mi := &file_myapp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseDeleteResponse) ProtoMessage() {}

func (x *DatabaseDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseDeleteResponse.ProtoReflect.Descriptor instead.
func (*DatabaseDeleteResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{12}
}

func (x *DatabaseDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseDeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 数据库单条查询
type DatabaseGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseGetRequest) Reset() {
	*x = DatabaseGetRequest{}
	mi := &file_myapp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseGetRequest) ProtoMessage() {}

func (x *DatabaseGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseGetRequest.ProtoReflect.Descriptor instead.
func (*DatabaseGetRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{13}
}

func (x *DatabaseGetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DatabaseGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Database      *DatabaseInfo          `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseGetResponse) Reset() {
	*x = DatabaseGetResponse{}
	mi := &file_myapp_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseGetResponse) ProtoMessage() {}

func (x *DatabaseGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseGetResponse.ProtoReflect.Descriptor instead.
func (*DatabaseGetResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{14}
}

func (x *DatabaseGetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseGetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DatabaseGetResponse) GetDatabase() *DatabaseInfo {
	if x != nil {
		return x.Database
	}
	return nil
}

// 数据库同步相关
type DatabaseSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerUrl     string                 `protobuf:"bytes,1,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"` // 远程服务器URL
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`          // API密钥
	SyncType      string                 `protobuf:"bytes,3,opt,name=sync_type,json=syncType,proto3" json:"sync_type,omitempty"`    // 同步类型: full/incremental
	Overwrite     bool                   `protobuf:"varint,4,opt,name=overwrite,proto3" json:"overwrite,omitempty"`                 // 是否覆盖已存在的记录
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseSyncRequest) Reset() {
	*x = DatabaseSyncRequest{}
	mi := &file_myapp_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseSyncRequest) ProtoMessage() {}

func (x *DatabaseSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseSyncRequest.ProtoReflect.Descriptor instead.
func (*DatabaseSyncRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{15}
}

func (x *DatabaseSyncRequest) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *DatabaseSyncRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DatabaseSyncRequest) GetSyncType() string {
	if x != nil {
		return x.SyncType
	}
	return ""
}

func (x *DatabaseSyncRequest) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

type DatabaseSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TotalSynced   int32                  `protobuf:"varint,3,opt,name=total_synced,json=totalSynced,proto3" json:"total_synced,omitempty"` // 同步总数
	Created       int32                  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"`                            // 新增数量
	Updated       int32                  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"`                            // 更新数量
	Skipped       int32                  `protobuf:"varint,6,opt,name=skipped,proto3" json:"skipped,omitempty"`                            // 跳过数量
	Errors        []string               `protobuf:"bytes,7,rep,name=errors,proto3" json:"errors,omitempty"`                               // 错误信息列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseSyncResponse) Reset() {
	*x = DatabaseSyncResponse{}
	mi := &file_myapp_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseSyncResponse) ProtoMessage() {}

func (x *DatabaseSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseSyncResponse.ProtoReflect.Descriptor instead.
func (*DatabaseSyncResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{16}
}

func (x *DatabaseSyncResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DatabaseSyncResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DatabaseSyncResponse) GetTotalSynced() int32 {
	if x != nil {
		return x.TotalSynced
	}
	return 0
}

func (x *DatabaseSyncResponse) GetCreated() int32 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *DatabaseSyncResponse) GetUpdated() int32 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *DatabaseSyncResponse) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *DatabaseSyncResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// 远程服务器数据库信息
type RemoteDatabaseInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Host          string                 `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Database      string                 `protobuf:"bytes,7,opt,name=database,proto3" json:"database,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Description   string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteDatabaseInfo) Reset() {
	*x = RemoteDatabaseInfo{}
	mi := &file_myapp_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteDatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDatabaseInfo) ProtoMessage() {}

func (x *RemoteDatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDatabaseInfo.ProtoReflect.Descriptor instead.
func (*RemoteDatabaseInfo) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{17}
}

func (x *RemoteDatabaseInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RemoteDatabaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RemoteDatabaseInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RemoteDatabaseInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RemoteDatabaseListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteDatabaseListRequest) Reset() {
	*x = RemoteDatabaseListRequest{}
	mi := &file_myapp_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteDatabaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDatabaseListRequest) ProtoMessage() {}

func (x *RemoteDatabaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDatabaseListRequest.ProtoReflect.Descriptor instead.
func (*RemoteDatabaseListRequest) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{18}
}

type RemoteDatabaseListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Databases     []*RemoteDatabaseInfo  `protobuf:"bytes,3,rep,name=databases,proto3" json:"databases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteDatabaseListResponse) Reset() {
	*x = RemoteDatabaseListResponse{}
	mi := &file_myapp_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteDatabaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteDatabaseListResponse) ProtoMessage() {}

func (x *RemoteDatabaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_myapp_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteDatabaseListResponse.ProtoReflect.Descriptor instead.
func (*RemoteDatabaseListResponse) Descriptor() ([]byte, []int) {
	return file_myapp_proto_rawDescGZIP(), []int{19}
}

func (x *RemoteDatabaseListResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoteDatabaseListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RemoteDatabaseListResponse) GetDatabases() []*RemoteDatabaseInfo {
	if x != nil {
		return x.Databases
	}
	return nil
}

var File_myapp_proto protoreflect.FileDescriptor

const file_myapp_proto_rawDesc = "" +
	"\n" +
	"\vmyapp.proto\x12\x05myapp\"\x1d\n" +
	"\aRequest\x12\x12\n" +
	"\x04ping\x18\x01 \x01(\tR\x04ping\"\x1e\n" +
	"\bResponse\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"\xdd\x01\n" +
	"\x15DatabaseCreateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x12\x1a\n" +
	"\bdatabase\x18\a \x01(\tR\bdatabase\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\"m\n" +
	"\x16DatabaseCreateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vdatabase_id\x18\x03 \x01(\x04R\n" +
	"databaseId\"6\n" +
	"\x13DatabaseTestRequest\x12\x1f\n" +
	"\vdatabase_id\x18\x01 \x01(\x04R\n" +
	"databaseId\"J\n" +
	"\x14DatabaseTestResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x15\n" +
	"\x13DatabaseListRequest\"\xff\x01\n" +
	"\fDatabaseInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bdatabase\x18\a \x01(\tR\bdatabase\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\tR\tcreatedAt\"}\n" +
	"\x14DatabaseListResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x121\n" +
	"\tdatabases\x18\x03 \x03(\v2\x13.myapp.DatabaseInfoR\tdatabases\"\xed\x01\n" +
	"\x15DatabaseUpdateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\x12\x1a\n" +
	"\bdatabase\x18\b \x01(\tR\bdatabase\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\"L\n" +
	"\x16DatabaseUpdateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"'\n" +
	"\x15DatabaseDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"L\n" +
	"\x16DatabaseDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"$\n" +
	"\x12DatabaseGetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"z\n" +
	"\x13DatabaseGetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12/\n" +
	"\bdatabase\x18\x03 \x01(\v2\x13.myapp.DatabaseInfoR\bdatabase\"\x88\x01\n" +
	"\x13DatabaseSyncRequest\x12\x1d\n" +
	"\n" +
	"server_url\x18\x01 \x01(\tR\tserverUrl\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\x12\x1b\n" +
	"\tsync_type\x18\x03 \x01(\tR\bsyncType\x12\x1c\n" +
	"\toverwrite\x18\x04 \x01(\bR\toverwrite\"\xd3\x01\n" +
	"\x14DatabaseSyncResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\ftotal_synced\x18\x03 \x01(\x05R\vtotalSynced\x12\x18\n" +
	"\acreated\x18\x04 \x01(\x05R\acreated\x12\x18\n" +
	"\aupdated\x18\x05 \x01(\x05R\aupdated\x12\x18\n" +
	"\askipped\x18\x06 \x01(\x05R\askipped\x12\x16\n" +
	"\x06errors\x18\a \x03(\tR\x06errors\"\xa4\x02\n" +
	"\x12RemoteDatabaseInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bdatabase\x18\a \x01(\tR\bdatabase\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\v \x01(\tR\tupdatedAt\"\x1b\n" +
	"\x19RemoteDatabaseListRequest\"\x89\x01\n" +
	"\x1aRemoteDatabaseListResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\tdatabases\x18\x03 \x03(\v2\x19.myapp.RemoteDatabaseInfoR\tdatabases2\x99\x05\n" +
	"\x05Myapp\x12'\n" +
	"\x04Ping\x12\x0e.myapp.Request\x1a\x0f.myapp.Response\x12G\n" +
	"\fDatabaseSync\x12\x1a.myapp.DatabaseSyncRequest\x1a\x1b.myapp.DatabaseSyncResponse\x12Y\n" +
	"\x12RemoteDatabaseList\x12 .myapp.RemoteDatabaseListRequest\x1a!.myapp.RemoteDatabaseListResponse\x12M\n" +
	"\x0eDatabaseCreate\x12\x1c.myapp.DatabaseCreateRequest\x1a\x1d.myapp.DatabaseCreateResponse\x12G\n" +
	"\fDatabaseTest\x12\x1a.myapp.DatabaseTestRequest\x1a\x1b.myapp.DatabaseTestResponse\x12G\n" +
	"\fDatabaseList\x12\x1a.myapp.DatabaseListRequest\x1a\x1b.myapp.DatabaseListResponse\x12M\n" +
	"\x0eDatabaseUpdate\x12\x1c.myapp.DatabaseUpdateRequest\x1a\x1d.myapp.DatabaseUpdateResponse\x12M\n" +
	"\x0eDatabaseDelete\x12\x1c.myapp.DatabaseDeleteRequest\x1a\x1d.myapp.DatabaseDeleteResponse\x12D\n" +
	"\vDatabaseGet\x12\x19.myapp.DatabaseGetRequest\x1a\x1a.myapp.DatabaseGetResponseB\x03Z\x01/b\x06proto3"

var (
	file_myapp_proto_rawDescOnce sync.Once
	file_myapp_proto_rawDescData []byte
)

func file_myapp_proto_rawDescGZIP() []byte {
	file_myapp_proto_rawDescOnce.Do(func() {
		file_myapp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_myapp_proto_rawDesc), len(file_myapp_proto_rawDesc)))
	})
	return file_myapp_proto_rawDescData
}

var file_myapp_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_myapp_proto_goTypes = []any{
	(*Request)(nil),                    // 0: myapp.Request
	(*Response)(nil),                   // 1: myapp.Response
	(*DatabaseCreateRequest)(nil),      // 2: myapp.DatabaseCreateRequest
	(*DatabaseCreateResponse)(nil),     // 3: myapp.DatabaseCreateResponse
	(*DatabaseTestRequest)(nil),        // 4: myapp.DatabaseTestRequest
	(*DatabaseTestResponse)(nil),       // 5: myapp.DatabaseTestResponse
	(*DatabaseListRequest)(nil),        // 6: myapp.DatabaseListRequest
	(*DatabaseInfo)(nil),               // 7: myapp.DatabaseInfo
	(*DatabaseListResponse)(nil),       // 8: myapp.DatabaseListResponse
	(*DatabaseUpdateRequest)(nil),      // 9: myapp.DatabaseUpdateRequest
	(*DatabaseUpdateResponse)(nil),     // 10: myapp.DatabaseUpdateResponse
	(*DatabaseDeleteRequest)(nil),      // 11: myapp.DatabaseDeleteRequest
	(*DatabaseDeleteResponse)(nil),     // 12: myapp.DatabaseDeleteResponse
	(*DatabaseGetRequest)(nil),         // 13: myapp.DatabaseGetRequest
	(*DatabaseGetResponse)(nil),        // 14: myapp.DatabaseGetResponse
	(*DatabaseSyncRequest)(nil),        // 15: myapp.DatabaseSyncRequest
	(*DatabaseSyncResponse)(nil),       // 16: myapp.DatabaseSyncResponse
	(*RemoteDatabaseInfo)(nil),         // 17: myapp.RemoteDatabaseInfo
	(*RemoteDatabaseListRequest)(nil),  // 18: myapp.RemoteDatabaseListRequest
	(*RemoteDatabaseListResponse)(nil), // 19: myapp.RemoteDatabaseListResponse
}
var file_myapp_proto_depIdxs = []int32{
	7,  // 0: myapp.DatabaseListResponse.databases:type_name -> myapp.DatabaseInfo
	7,  // 1: myapp.DatabaseGetResponse.database:type_name -> myapp.DatabaseInfo
	17, // 2: myapp.RemoteDatabaseListResponse.databases:type_name -> myapp.RemoteDatabaseInfo
	0,  // 3: myapp.Myapp.Ping:input_type -> myapp.Request
	15, // 4: myapp.Myapp.DatabaseSync:input_type -> myapp.DatabaseSyncRequest
	18, // 5: myapp.Myapp.RemoteDatabaseList:input_type -> myapp.RemoteDatabaseListRequest
	2,  // 6: myapp.Myapp.DatabaseCreate:input_type -> myapp.DatabaseCreateRequest
	4,  // 7: myapp.Myapp.DatabaseTest:input_type -> myapp.DatabaseTestRequest
	6,  // 8: myapp.Myapp.DatabaseList:input_type -> myapp.DatabaseListRequest
	9,  // 9: myapp.Myapp.DatabaseUpdate:input_type -> myapp.DatabaseUpdateRequest
	11, // 10: myapp.Myapp.DatabaseDelete:input_type -> myapp.DatabaseDeleteRequest
	13, // 11: myapp.Myapp.DatabaseGet:input_type -> myapp.DatabaseGetRequest
	1,  // 12: myapp.Myapp.Ping:output_type -> myapp.Response
	16, // 13: myapp.Myapp.DatabaseSync:output_type -> myapp.DatabaseSyncResponse
	19, // 14: myapp.Myapp.RemoteDatabaseList:output_type -> myapp.RemoteDatabaseListResponse
	3,  // 15: myapp.Myapp.DatabaseCreate:output_type -> myapp.DatabaseCreateResponse
	5,  // 16: myapp.Myapp.DatabaseTest:output_type -> myapp.DatabaseTestResponse
	8,  // 17: myapp.Myapp.DatabaseList:output_type -> myapp.DatabaseListResponse
	10, // 18: myapp.Myapp.DatabaseUpdate:output_type -> myapp.DatabaseUpdateResponse
	12, // 19: myapp.Myapp.DatabaseDelete:output_type -> myapp.DatabaseDeleteResponse
	14, // 20: myapp.Myapp.DatabaseGet:output_type -> myapp.DatabaseGetResponse
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_myapp_proto_init() }
func file_myapp_proto_init() {
	if File_myapp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_myapp_proto_rawDesc), len(file_myapp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_myapp_proto_goTypes,
		DependencyIndexes: file_myapp_proto_depIdxs,
		MessageInfos:      file_myapp_proto_msgTypes,
	}.Build()
	File_myapp_proto = out.File
	file_myapp_proto_goTypes = nil
	file_myapp_proto_depIdxs = nil
}
