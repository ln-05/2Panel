/*!
 * @form-create/component-elm-checkbox v3.2.23
 * (c) 2018-2025 xaboy
 * Github https://github.com/xaboy/form-create with checkbox
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,ref as r,watch as n,computed as u,createVNode as o,resolveComponent as a,mergeProps as l}from"vue";function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){f(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function f(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return s(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var v=e({name:"fcCheckbox",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:Array,default:function(){return[]}},type:String,options:Array,input:Boolean,inputValue:String},emits:["update:modelValue","fc.el"],setup:function(e,l){var i=t(e.formCreateInject,"options",[]),c=t(e,"options"),f=t(e,"modelValue"),s=t(e,"inputValue",""),v=r(s.value),d=t(e,"input",!1),m=function(e){var t=p(function(e){return Array.isArray(e)?e:[null,void 0,""].indexOf(e)>-1?[]:[e]}(f.value)),r=t.indexOf(v.value);v.value=e,r>-1&&(t.splice(r,1),t.push(e),b(t))};n(s,(function(e){d.value?m(e):v.value=e}));var y=u((function(){var e=i.value||[];return c.value&&(e=c.value||[]),Array.isArray(e)?e:[]}));n(f,(function(e){var t=null;if(!s.value&&null!=e&&Array.isArray(e)&&e.length>0&&d.value){var r=y.value.map((function(e){return e.value}));e.forEach((function(e){-1===r.indexOf(e)&&(t=e)}))}null!=t&&(v.value=t)}),{immediate:!0});var b=function(e){l.emit("update:modelValue",e)};return{options:y,value:f,onInput:b,updateCustomValue:m,makeInput:function(e){if(d.value)return o(e,{value:v.value||void 0,label:v.value||void 0},{default:function(){return[o(a("ElInput"),{size:"small",modelValue:v.value,"onUpdate:modelValue":m},null)]}})}}},render:function(){var e,t,r,n,u=this,i="button"===this.type?"ElCheckboxButton":"ElCheckbox",f=a(i);return o(a("ElCheckboxGroup"),l(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":this.onInput,ref:"el"}),c({default:function(){return[u.options.map((function(e,t){var r=c({},e),n=r.value,u=r.label;return delete r.value,delete r.label,o(f,l(r,{label:n,value:n,key:i+t+"-"+n}),{default:function(){return[u||n||""]}})})),null===(e=(t=u.$slots).default)||void 0===e?void 0:e.call(t),u.makeInput(f)]}},(r=this.$slots,n=["default"],Object.keys(r).reduce((function(e,t){return n&&-1!==n.indexOf(t)||(e[t]=r[t]),e}),{}))))},mounted:function(){this.$emit("fc.el",this.$refs.el)}});export{v as default};
